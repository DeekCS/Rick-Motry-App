{"version":3,"sources":["components/Search/Search.module.scss","components/Search/Search.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Filter/FilterBTN.js","components/Filter/category/Gender.js","components/Filter/category/Species.js","components/Filter/category/Status.js","components/Filter/Filter.js","components/Navbar/Navbar.js","components/Filter/category/InputGroup.js","Pages/Episodes.js","Pages/Location.js","components/Card/CardDetails.js","App.js","reportWebVitals.js","index.js","components/Card/Card.module.scss"],"names":["module","exports","Search","setSearch","updatePageNumber","className","styles","search","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","Card","display","page","results","map","x","id","image","name","status","location","style","textDecoration","to","card","img","src","alt","content","badge","Pagination","pageNumber","info","useState","window","innerWidth","width","setWidth","updateDimensions","useEffect","addEventListener","removeEventListener","jsx","nextLabel","forcePage","previousLabel","previousClassName","nextClassName","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","data","selected","pageClassName","pageLinkClassName","FilterBTN","task","index","for","Gender","updateGender","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","items","Species","updateSpecies","item","Status","updateStatus","Filter","cursor","reload","Navbar","aria-label","InputGroup","changeID","total","Array","keys","Episodes","React","setResults","setInfo","air_date","episode","setID","api","a","fetch","then","res","json","Promise","all","characters","Location","dimension","number","setNumber","residents","CardDetails","useParams","fetchedData","updateFetchedData","origin","gender","species","Home","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d891738c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__2qNJj\",\"btn\":\"Search_btn__2gOlQ\"};","import React from \"react\";\r\nimport styles from \"./Search.module.scss\";\r\n\r\nconst Search = ({ setSearch, updatePageNumber }) => {\r\n    let searchBtn = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}>\r\n        <input\r\n            onChange={(e) => {\r\n                updatePageNumber(1);\r\n                setSearch(e.target.value);\r\n            }}\r\n            placeholder=\"Search for characters\"\r\n            className={styles.input}\r\n            type=\"text\"\r\n        />\r\n        <button\r\n            onClick={searchBtn}\r\n            className={`${styles.btn} btn btn-primary fs-5`}>\r\n            Search\r\n        </button>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./Card.module.scss\";\r\n// import CardDetails from \"./CardDetails\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\n\r\n\r\nconst Card = ({ page, results }) => {\r\n    let display;\r\n\r\n    if (results) {\r\n        display = results.map((x) => {\r\n            let { id, image, name, status, location } = x;\r\n\r\n            return (\r\n                <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={`${page}${id}`}\r\n                    key={id}\r\n                    className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\r\n                >\r\n                    <div\r\n                        className={`${styles.card} d-flex flex-column justify-content-center`}\r\n                    >\r\n                        <img className={`${styles.img} img-fluid`} src={image} alt=\"\" />\r\n                        <div className={`${styles.content}`}>\r\n                            <div className=\"fs-5 fw-bold mb-4\">{name}</div>\r\n                            <div className=\"\">\r\n                                <div className=\"fs-6 fw-normal\">Last Location</div>\r\n                                <div className=\"fs-5\">{location.name}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {(() => {\r\n                        if (status === \"Dead\") {\r\n                            return (\r\n                                <div\r\n                                    className={`${styles.badge} position-absolute badge bg-danger`}\r\n                                >\r\n                                    {status}\r\n                                </div>\r\n                            );\r\n                        } else if (status === \"Alive\") {\r\n                            return (\r\n                                <div\r\n                                    className={`${styles.badge} position-absolute badge bg-success`}\r\n                                >\r\n                                    {status}\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <div\r\n                                    className={`${styles.badge} position-absolute badge bg-secondary`}\r\n                                >\r\n                                    {status}\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })()}\r\n                </Link>\r\n            );\r\n        });\r\n    } else {\r\n        display = \"No Characters Found :/\";\r\n    }\r\n\r\n    return <>{display}</>;\r\n};\r\n\r\nexport default Card;","import React, {useState, useEffect} from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Pagination = ({pageNumber, info, updatePageNumber}) => {\r\n    let pageChange = (data) => {\r\n        updatePageNumber(data.selected + 1);\r\n    };\r\nconst [width, setWidth] = useState(window.innerWidth);\r\nconst updateDimensions = () => {\r\n    setWidth(window.innerWidth);\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n        return () => window.removeEventListener(\"resize\", updateDimensions);\r\n    },[]);\r\n    return (\r\n        <>\r\n            <style jsx>\r\n                {`\r\n                  a {\r\n                    color: white;\r\n                    text-decoration: none;\r\n                  }\r\n\r\n                  @media (max-width: 768px) {\r\n                    .pagination {\r\n                      font-size: 12px\r\n                    }\r\n\r\n                    .next,\r\n                    .prev {\r\n                      display: none\r\n                    }\r\n                  }\r\n\r\n                  @media (max-width: 768px) {\r\n                    .pagination {\r\n                      font-size: 14px\r\n                    }\r\n                  }\r\n                `}\r\n            </style>\r\n            <ReactPaginate\r\n                className=\"pagination justify-content-center my-4 gap-4\"\r\n                nextLabel=\"Next\"\r\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\r\n                previousLabel=\"Prev\"\r\n                previousClassName=\"btn btn-primary fs-5 prev\"\r\n                nextClassName=\"btn btn-primary fs-5 next\"\r\n                activeClassName=\"active\"\r\n                marginPagesDisplayed={width < 576 ? 1 : 2}\r\n                pageRangeDisplayed={width < 576 ? 1 : 2}\r\n                pageCount={info?.pages}\r\n                onPageChange={pageChange}\r\n                pageClassName=\"page-item\"\r\n                pageLinkClassName=\"page-link\"\r\n            />\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\r\n    return (\r\n        <div>\r\n            <style jsx>\r\n                {`\r\n          .x:checked + label {\r\n            background-color: #0b5ed7;\r\n            color: white;\r\n          }\r\n          input[type=\"radio\"] {\r\n            display: none;\r\n          }\r\n        `}\r\n            </style>\r\n\r\n            <div className=\"form-check\">\r\n                <input\r\n                    className=\"form-check-input x\"\r\n                    type=\"radio\"\r\n                    name={name}\r\n                    id={`${name}-${index}`}\r\n                />\r\n                <label\r\n                    onClick={(x) => {\r\n                        task(input);\r\n                        updatePageNumber(1);\r\n                    }}\r\n                    className=\"btn btn-outline-primary\"\r\n                    for={`${name}-${index}`}\r\n                >\r\n                    {input}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterBTN;","import FilterBTN from \"../FilterBTN\";\r\n\r\nconst Gender = ({ updateGender, updatePageNumber }) => {\r\n    let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\r\n    return (\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button\r\n                    className=\"accordion-button collapsed\" type=\"button\"\r\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\"\r\n                    aria-expanded=\"false\" aria-controls=\"collapseThree\"\r\n                > Gender </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\"\r\n                 aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\"\r\n            >\r\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n                    {genders.map((items, index) => {\r\n                        return (\r\n                            <FilterBTN\r\n                                name=\"gender\" index={index} key={index}\r\n                                updatePageNumber={updatePageNumber}\r\n                                task={updateGender} input={items}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gender;","import React from \"react\";\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Species = ({ updateSpecies, updatePageNumber }) => {\r\n    let species = [\r\n        \"Human\",\r\n        \"Alien\",\r\n        \"Humanoid\",\r\n        \"Poopybutthole\",\r\n        \"Mythological\",\r\n        \"Unknown\",\r\n        \"Animal\",\r\n        \"Disease\",\r\n        \"Robot\",\r\n        \"Cronenberg\",\r\n        \"Planet\",\r\n    ];\r\n    return (\r\n        <div className=\"accordion-item \">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button\r\n                    className=\"accordion-button collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#collapseTwo\"\r\n                    aria-expanded=\"false\"\r\n                    aria-controls=\"collapseTwo\"\r\n                >\r\n                    Species\r\n                </button>\r\n            </h2>\r\n            <div\r\n                id=\"collapseTwo\"\r\n                className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-bs-parent=\"#accordionExample\"\r\n            >\r\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n                    {species.map((item, index) => {\r\n                        return (\r\n                            <FilterBTN\r\n                                name=\"species\"\r\n                                index={index}\r\n                                key={index}\r\n                                updatePageNumber={updatePageNumber}\r\n                                task={updateSpecies}\r\n                                input={item}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Species;","import React from \"react\";\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Status = ({ updateStatus, updatePageNumber }) => {\r\n    let status = [\"Alive\", \"Dead\", \"Unknown\"];\r\n    return (\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button\r\n                    className=\"accordion-button\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#collapseOne\"\r\n                    aria-expanded=\"true\"\r\n                    aria-controls=\"collapseOne\"\r\n                >\r\n                    Status\r\n                </button>\r\n            </h2>\r\n            <div\r\n                id=\"collapseOne\"\r\n                className=\"accordion-collapse collapse show\"\r\n                aria-labelledby=\"headingOne\"\r\n                data-bs-parent=\"#accordionExample\"\r\n            >\r\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n                    {status.map((item, index) => (\r\n                        <FilterBTN\r\n                            key={index}\r\n                            index={index}\r\n                            name=\"status\"\r\n                            task={updateStatus}\r\n                            updatePageNumber={updatePageNumber}\r\n                            input={item}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Status;","import React from \"react\";\r\nimport Gender from \"./category/Gender\";\r\nimport Species from \"./category/Species\";\r\nimport Status from \"./category/Status\";\r\n\r\nconst Filter = ({\r\n                    pageNumber,\r\n                    updatePageNumber,\r\n                    updateStatus,\r\n                    updateGender,\r\n                    updateSpecies,\r\n                }) => {\r\n    let clear = () => {\r\n        updateStatus(\"\");\r\n        updateGender(\"\");\r\n        updateSpecies(\"\");\r\n        updatePageNumber(1);\r\n        window.location.reload(false);\r\n    };\r\n    return (\r\n        <div className=\"col-lg-3 col-12 mb-5\">\r\n            <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\r\n            <div\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={clear}\r\n                className=\"text-primary text-decoration-underline text-center mb-3\"\r\n            >\r\n                Clear Filters\r\n            </div>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <Status\r\n                    updatePageNumber={updatePageNumber}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                <Species\r\n                    updatePageNumber={updatePageNumber}\r\n                    updateSpecies={updateSpecies}\r\n                />\r\n                <Gender\r\n                    updatePageNumber={updatePageNumber}\r\n                    updateGender={updateGender}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;","import { NavLink, Link } from \"react-router-dom\";\r\nimport \"../../App.css\";\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu\">\r\n                    Rick & Morty <span className=\"text-primary\">WiKi</span>\r\n                </Link>\r\n                <style jsx>{`\r\n        button[aria-expanded=\"false\"] > .close {\r\n          display: none;\r\n        }\r\n        button[aria-expanded=\"true\"] > .open {\r\n          display: none;\r\n        }\r\n      `}</style>\r\n            </div>\r\n            <button\r\n                className=\"navbar-toggler border-0\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarNavAltMarkup\"\r\n                aria-controls=\"navbarNavAltMarkup\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"fas fa-bars open text-dark\"></span>\r\n                <span className=\"fas fa-times close text-dark\"></span>\r\n            </button>\r\n            <div\r\n                className=\"collapse navbar-collapse justify-content-end\"\r\n                id=\"navbarNavAltMarkup\"\r\n            > <div className=\"navbar-nav fs-5\">\r\n                <NavLink to=\"/\" className=\"nav-link\">\r\n                    Characters\r\n                </NavLink>\r\n                <NavLink to=\"/episodes\" className=\"nav-link\">\r\n                    Episode\r\n                </NavLink>\r\n                <NavLink\r\n                    activeClassName=\"active\" className=\"nav-link\"\r\n                    to=\"/location\" >Location</NavLink>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst InputGroup = ({ name, changeID, total }) => {\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <select\r\n                onChange={(e) => changeID(e.target.value)}\r\n                className=\"form-select\"\r\n                id={name}\r\n            >\r\n                <option value=\"1\">Choose...</option>\r\n                {[...Array(total).keys()].map((x, index) => {\r\n                    return (\r\n                        <option value={x + 1}>\r\n                            {name} - {x + 1}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputGroup;","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card/Card\";\r\nimport InputGroup from \"../components/Filter/category/InputGroup\";\r\n\r\nconst Episodes = () => {\r\n    let [results, setResults] = React.useState([]);\r\n    let [info, setInfo] = useState([]);\r\n    let { air_date, episode, name } = info;\r\n    let [id, setID] = useState(1);\r\n\r\n    let api = `https://rickandmortyapi.com/api/episode/${id}`;\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            let data = await fetch(api).then((res) => res.json());\r\n            setInfo(data);\r\n\r\n            let a = await Promise.all(\r\n                data.characters.map((x) => {\r\n                    return fetch(x).then((res) => res.json());\r\n                })\r\n            );\r\n            setResults(a);\r\n        })();\r\n    }, [api]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mb-3\">\r\n                <h1 className=\"text-center mb-3\">\r\n                    Episode name :{\" \"}\r\n                    <span className=\"text-primary\">{name === \"\" ? \"Unknown\" : name}</span>\r\n                </h1>\r\n                <h5 className=\"text-center\">\r\n                    Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\r\n                </h5>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-12 mb-4\">\r\n                    <h4 className=\"text-center mb-4\">Pick Episode</h4>\r\n                    <InputGroup name=\"Episode\" changeID={setID} total={51} />\r\n                </div>\r\n                <div className=\"col-lg-8 col-12\">\r\n                    <div className=\"row\">\r\n                        <Card page=\"/episodes/\" results={results} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Episodes;","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"../components/Card/Card\";\r\nimport InputGroup from \"../components/Filter/category/InputGroup\";\r\n\r\nconst Location = () => {\r\n    let [results, setResults] = React.useState([]);\r\n    let [info, setInfo] = useState([]);\r\n    let { dimension, type, name } = info;\r\n    let [number, setNumber] = useState(1);\r\n\r\n    let api = `https://rickandmortyapi.com/api/location/${number}`;\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            let data = await fetch(api).then((res) => res.json());\r\n            setInfo(data);\r\n\r\n            let a = await Promise.all(\r\n                data.residents.map((x) => {\r\n                    return fetch(x).then((res) => res.json());\r\n                })\r\n            );\r\n            setResults(a);\r\n        })();\r\n    }, [api]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mb-3\">\r\n                <h1 className=\"text-center mb-3\">\r\n                    Location :\r\n                    <span className=\"text-primary\">\r\n            {\" \"}\r\n                        {name === \"\" ? \"Unknown\" : name}\r\n          </span>\r\n                </h1>\r\n                <h5 className=\"text-center\">\r\n                    Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\r\n                </h5>\r\n                <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-3 col-12 mb-4\">\r\n                    <h4 className=\"text-center mb-4\">Pick Location</h4>\r\n                    <InputGroup name=\"Location\" changeID={setNumber} total={126} />\r\n                </div>\r\n                <div className=\"col-lg-8 col-12\">\r\n                    <div className=\"row\">\r\n                        <Card page=\"/location/\" results={results} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Location;","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst CardDetails = () => {\r\n    let { id } = useParams();\r\n    let [fetchedData, updateFetchedData] = useState([]);\r\n    let { name, location, origin, gender, image, status, species } = fetchedData;\r\n\r\n    let api = `https://rickandmortyapi.com/api/character/${id}`;\r\n\r\n    useEffect(() => {\r\n        (async function () {\r\n            let data = await fetch(api).then((res) => res.json());\r\n            updateFetchedData(data);\r\n        })();\r\n    }, [api]);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container d-flex justify-content-center mb-5\">\r\n            <div className=\"d-flex flex-column gap-3\">\r\n                <h1 className=\"text-center\">{name}</h1>\r\n                <img className=\"img-fluid\" src={image} alt=\"\" />\r\n            </div>\r\n            {(() => {\r\n                if (status === \"Dead\") {\r\n                    return <div className=\"badge bg-danger fs-5\">{status}</div>;\r\n                } else if (status === \"Alive\") {\r\n                    return <div className=\" badge bg-success fs-5\">{status}</div>;\r\n                } else {\r\n                    return <div className=\"badge bg-secondary fs-5\">{status}</div>;\r\n                }\r\n            })()}\r\n            <div className=\"content\">\r\n                <div className=\"\">\r\n                    <span className=\"fw-bold\">Gender : </span>\r\n                    {gender}\r\n                </div>\r\n                <div className=\"\">\r\n                    <span className=\"fw-bold\">Location: </span>\r\n                    {location?.name}\r\n                </div>\r\n                <div className=\"\">\r\n                    <span className=\"fw-bold\">Origin: </span>\r\n                    {origin?.name}\r\n                </div>\r\n                <div className=\"\">\r\n                    <span className=\"fw-bold\">Species: </span>\r\n                    {species}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default CardDetails;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Search from \"./components/Search/Search\";\nimport Card from \"./components/Card/Card\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Filter from \"./components/Filter/Filter\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Episodes from \"./Pages/Episodes\";\nimport Location from \"./Pages/Location\";\nimport CardDetails from \"./components/Card/CardDetails\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navbar />\n            </div>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/:id\" element={<CardDetails />} />\n\n                <Route path=\"/episodes\" element={<Episodes />} />\n                <Route path=\"/episodes/:id\" element={<CardDetails />} />\n\n                <Route path=\"/location\" element={<Location />} />\n                <Route path=\"/location/:id\" element={<CardDetails />} />\n            </Routes>\n        </Router>\n    );\n}\n\nconst Home = () => {\n    let [pageNumber, updatePageNumber] = useState(1);\n    let [status, updateStatus] = useState(\"\");\n    let [gender, updateGender] = useState(\"\");\n    let [species, updateSpecies] = useState(\"\");\n    let [fetchedData, updateFetchedData] = useState([]);\n    let [search, setSearch] = useState(\"\");\n    let { info, results } = fetchedData;\n\n    let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\n\n    useEffect(() => {\n        (async function () {\n            let data = await fetch(api).then((res) => res.json());\n            updateFetchedData(data);\n        })();\n    }, [api]);\n    return (\n        <div className=\"App\">\n            <h1 className=\"text-center mb-3\">Characters</h1>\n            <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Filter\n                        pageNumber={pageNumber}\n                        status={status}\n                        updateStatus={updateStatus}\n                        updateGender={updateGender}\n                        updateSpecies={updateSpecies}\n                        updatePageNumber={updatePageNumber}\n                    />\n                    <div className=\"col-lg-8 col-12\">\n                        <div className=\"row\">\n                            <Card page=\"/\" results={results} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Pagination\n                info={info}\n                pageNumber={pageNumber}\n                updatePageNumber={updatePageNumber}\n            />\n        </div>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3g9ql\",\"content\":\"Card_content__1Fd5z\",\"img\":\"Card_img__XeHfY\",\"badge\":\"Card_badge__2lmFO\"};"],"sourceRoot":""}